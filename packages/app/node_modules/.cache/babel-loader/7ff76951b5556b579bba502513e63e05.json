{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDoc\\\\CODING\\\\MyProjects\\\\d3-tests\\\\packages\\\\app\\\\src\\\\App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// import { GlobalStyle, theme } from '@d3-tests/design-system';\nimport React from 'react';\nimport * as d3 from 'd3-shape'; // import { ThemeProvider } from 'styled-components';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MAX_SIZE = 500;\n\nvar random = function random(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\nvar App = function App() {\n  _s();\n\n  var _square;\n\n  var points = React.useMemo(function () {\n    return Array.from({\n      length: 50\n    }, function (_, i) {\n      return {\n        height: random(10, MAX_SIZE),\n        width: 20,\n        index: i\n      };\n    });\n  }, []);\n  var lines = React.useMemo(function () {\n    var length = 10;\n    var step = MAX_SIZE / length;\n    return Array.from({\n      length: length\n    }, function (_, i) {\n      return {\n        y: step * i\n      };\n    });\n  }, []);\n  var square = d3.area().x(function (p) {\n    return p.index * p.width;\n  }).y0(function (p) {\n    return 0;\n  }).y1(function (p) {\n    return p.height;\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: MAX_SIZE,\n    width: MAX_SIZE,\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: (_square = square(points)) !== null && _square !== void 0 ? _square : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), lines.map(function (l) {\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        y1: l.y,\n        y2: l.y,\n        x1: 0,\n        x2: MAX_SIZE,\n        strokeWidth: \"2px\",\n        stroke: \"#000000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"8gYcpWtbTJmV92lCRJqGdxztDOQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","d3","MAX_SIZE","random","min","max","Math","floor","App","points","useMemo","Array","from","length","_","i","height","width","index","lines","step","y","square","area","x","p","y0","y1","undefined","map","l"],"sources":["D:/MyDoc/CODING/MyProjects/d3-tests/packages/app/src/App.tsx"],"sourcesContent":["// import { GlobalStyle, theme } from '@d3-tests/design-system';\nimport React from 'react';\nimport * as d3 from 'd3-shape';\n// import { ThemeProvider } from 'styled-components';\n\ninterface Point {\n  height: number;\n  width: number;\n  index: number;\n}\n\ninterface VLine {\n  y: number;\n}\n\nconst MAX_SIZE = 500;\n\nconst random = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min)) + min;\n\nconst App = () => {\n  const points = React.useMemo<Point[]>(\n    () =>\n      Array.from({ length: 50 }, (_, i) => ({\n        height: random(10, MAX_SIZE),\n        width: 20,\n        index: i,\n      })),\n    [],\n  );\n\n  const lines = React.useMemo(() => {\n    const length = 10;\n    const step = MAX_SIZE / length;\n\n    return Array.from<undefined, VLine>({ length }, (_, i) => ({\n      y: step * i,\n    }));\n  }, []);\n\n  const square = d3\n    .area<Point>()\n    .x((p) => p.index * p.width)\n    .y0((p) => 0)\n    .y1((p) => p.height);\n\n  return (\n    <svg height={MAX_SIZE} width={MAX_SIZE}>\n      <path d={square(points) ?? undefined}></path>\n\n      {lines.map((l) => (\n        <line\n          y1={l.y}\n          y2={l.y}\n          x1={0}\n          x2={MAX_SIZE}\n          strokeWidth=\"2px\"\n          stroke=\"#000000\"\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,UAApB,C,CACA;;;AAYA,IAAMC,QAAQ,GAAG,GAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAcC,GAAd;EAAA,OACbC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,MAAiBE,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAD7B;AAAA,CAAf;;AAGA,IAAMI,GAAG,GAAG,SAANA,GAAM,GAAM;EAAA;;EAAA;;EAChB,IAAMC,MAAM,GAAGT,KAAK,CAACU,OAAN,CACb;IAAA,OACEC,KAAK,CAACC,IAAN,CAAW;MAAEC,MAAM,EAAE;IAAV,CAAX,EAA2B,UAACC,CAAD,EAAIC,CAAJ;MAAA,OAAW;QACpCC,MAAM,EAAEb,MAAM,CAAC,EAAD,EAAKD,QAAL,CADsB;QAEpCe,KAAK,EAAE,EAF6B;QAGpCC,KAAK,EAAEH;MAH6B,CAAX;IAAA,CAA3B,CADF;EAAA,CADa,EAOb,EAPa,CAAf;EAUA,IAAMI,KAAK,GAAGnB,KAAK,CAACU,OAAN,CAAc,YAAM;IAChC,IAAMG,MAAM,GAAG,EAAf;IACA,IAAMO,IAAI,GAAGlB,QAAQ,GAAGW,MAAxB;IAEA,OAAOF,KAAK,CAACC,IAAN,CAA6B;MAAEC,MAAM,EAANA;IAAF,CAA7B,EAAyC,UAACC,CAAD,EAAIC,CAAJ;MAAA,OAAW;QACzDM,CAAC,EAAED,IAAI,GAAGL;MAD+C,CAAX;IAAA,CAAzC,CAAP;EAGD,CAPa,EAOX,EAPW,CAAd;EASA,IAAMO,MAAM,GAAGrB,EAAE,CACdsB,IADY,GAEZC,CAFY,CAEV,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACP,KAAF,GAAUO,CAAC,CAACR,KAAnB;EAAA,CAFU,EAGZS,EAHY,CAGT,UAACD,CAAD;IAAA,OAAO,CAAP;EAAA,CAHS,EAIZE,EAJY,CAIT,UAACF,CAAD;IAAA,OAAOA,CAAC,CAACT,MAAT;EAAA,CAJS,CAAf;EAMA,oBACE;IAAK,MAAM,EAAEd,QAAb;IAAuB,KAAK,EAAEA,QAA9B;IAAA,wBACE;MAAM,CAAC,aAAEoB,MAAM,CAACb,MAAD,CAAR,6CAAoBmB;IAA3B;MAAA;MAAA;MAAA;IAAA,SADF,EAGGT,KAAK,CAACU,GAAN,CAAU,UAACC,CAAD;MAAA,oBACT;QACE,EAAE,EAAEA,CAAC,CAACT,CADR;QAEE,EAAE,EAAES,CAAC,CAACT,CAFR;QAGE,EAAE,EAAE,CAHN;QAIE,EAAE,EAAEnB,QAJN;QAKE,WAAW,EAAC,KALd;QAME,MAAM,EAAC;MANT;QAAA;QAAA;QAAA;MAAA,SADS;IAAA,CAAV,CAHH;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAgBD,CA1CD;;GAAMM,G;;KAAAA,G;AA4CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}